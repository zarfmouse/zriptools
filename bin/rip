#!/usr/bin/php
<?php

// Capture signals and convert them into a graceful exit for
// register_shutdown_function() to handle.
declare(ticks = 1);
pcntl_signal(SIGINT, function() {exit;});
pcntl_signal(SIGTERM, function() {exit;});

require_once __DIR__."/../lib/autoload-init.php";

// Parse command line arguments into a $task and the $arguments array.
$arguments = array();
$script = array_shift($_SERVER['argv']);
while(count($_SERVER['argv']) > 0 && (count($_SERVER['argv'])%2 == 0)) {
  $key = array_shift($_SERVER['argv']);
  $val = array_shift($_SERVER['argv']);
  $key = preg_replace('/^\-+/', '', $key);
  // TODO: Support multi-valued arguments. ZCore\Help doesn't support
  // them yet either.
  $arguments[$key] = $val;
}

use ZRipTasks\RipAudio;
$task = new RipAudio($arguments['device'], $arguments['pcm'], $arguments['toc'], $arguments['log']);
$task->registerProgressListener(function($p, $s) { 
    print sprintf("%35s ", $s);
    $complete = round(35 * ($p/100));
    $remaining = 35 - $complete;
    print str_repeat('=', $complete);
    print ">";
    print str_repeat(' ', $remaining);
    print sprintf(" %3d%%", $p);
    print "\r";
  });
$task->run();
print "\n";

